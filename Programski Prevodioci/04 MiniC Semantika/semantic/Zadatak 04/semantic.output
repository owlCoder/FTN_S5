Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list _RBRACKET

    9 variable_list: %empty
   10              | variable_list variable

   11 $@2: %empty

   12 variable: _TYPE $@2 promenljiva _SEMICOLON

   13 promenljiva: _ID
   14            | promenljiva _COMMA _ID

   15 $@3: %empty

   16 $@4: %empty

   17 do_while_statement: _DO statement _WHILE _LPAREN _ID $@3 _RELOP literal $@4 _RPAREN _SEMICOLON

   18 statement_list: %empty
   19               | statement_list statement

   20 statement: compound_statement
   21          | assignment_statement
   22          | if_statement
   23          | do_while_statement
   24          | return_statement

   25 compound_statement: _LBRACKET statement_list _RBRACKET

   26 assignment_statement: _ID dodela _SEMICOLON

   27 dodela: _ASSIGN num_exp
   28       | dodela _ASSIGN num_exp

   29 num_exp: exp
   30        | num_exp _AROP exp

   31 exp: literal
   32    | _ID
   33    | _ID _INCREMENT
   34    | function_call
   35    | _LPAREN num_exp _RPAREN

   36 literal: _INT_NUMBER
   37        | _UINT_NUMBER

   38 $@5: %empty

   39 function_call: _ID $@5 _LPAREN argument _RPAREN

   40 argument: %empty
   41         | num_exp

   42 if_statement: if_part
   43             | if_part _ELSE statement

   44 if_part: _IF _LPAREN rel_exp _RPAREN statement

   45 rel_exp: num_exp _RELOP num_exp

   46 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12
    _IF (259) 44
    _ELSE (260) 43
    _RETURN (261) 46
    _DO (262) 17
    _WHILE (263) 17
    _ID <s> (264) 5 7 13 14 17 26 32 33 39
    _INT_NUMBER <s> (265) 36
    _UINT_NUMBER <s> (266) 37
    _LPAREN (267) 5 17 35 39 44
    _RPAREN (268) 5 17 35 39 44
    _LBRACKET (269) 8 25
    _RBRACKET (270) 8 25
    _COMMA (271) 14
    _INCREMENT (272) 33
    _ASSIGN (273) 27 28
    _SEMICOLON (274) 12 17 26 46
    _AROP <i> (275) 30
    _RELOP <i> (276) 17 45
    ONLY_IF (277)


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    program (24)
        on left: 1
        on right: 0
    function_list (25)
        on left: 2 3
        on right: 1 3
    function (26)
        on left: 5
        on right: 2 3
    $@1 (27)
        on left: 4
        on right: 5
    parameter (28)
        on left: 6 7
        on right: 5
    body (29)
        on left: 8
        on right: 5
    variable_list (30)
        on left: 9 10
        on right: 8 10
    variable (31)
        on left: 12
        on right: 10
    $@2 (32)
        on left: 11
        on right: 12
    promenljiva (33)
        on left: 13 14
        on right: 12 14
    do_while_statement (34)
        on left: 17
        on right: 23
    $@3 (35)
        on left: 15
        on right: 17
    $@4 (36)
        on left: 16
        on right: 17
    statement_list (37)
        on left: 18 19
        on right: 8 19 25
    statement (38)
        on left: 20 21 22 23 24
        on right: 17 19 43 44
    compound_statement (39)
        on left: 25
        on right: 20
    assignment_statement (40)
        on left: 26
        on right: 21
    dodela (41)
        on left: 27 28
        on right: 26 28
    num_exp <i> (42)
        on left: 29 30
        on right: 27 28 30 35 41 45 46
    exp <i> (43)
        on left: 31 32 33 34 35
        on right: 29 30
    literal <i> (44)
        on left: 36 37
        on right: 17 31
    function_call <i> (45)
        on left: 39
        on right: 34
    $@5 (46)
        on left: 38
        on right: 39
    argument <i> (47)
        on left: 40 41
        on right: 39
    if_statement (48)
        on left: 42 43
        on right: 22
    if_part (49)
        on left: 44
        on right: 42 43
    rel_exp <i> (50)
        on left: 45
        on right: 44
    return_statement (51)
        on left: 46
        on right: 24


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list _RBRACKET
   10 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 18 (statement_list)

    variable        go to state 18
    statement_list  go to state 19


State 17

   12 variable: _TYPE . $@2 promenljiva _SEMICOLON

    $default  reduce using rule 11 ($@2)

    $@2  go to state 20


State 18

   10 variable_list: variable_list variable .

    $default  reduce using rule 10 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . _RBRACKET
   19 statement_list: statement_list . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _DO        shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _RBRACKET  shift, and go to state 26

    do_while_statement    go to state 27
    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 20

   12 variable: _TYPE $@2 . promenljiva _SEMICOLON

    _ID  shift, and go to state 34

    promenljiva  go to state 35


State 21

   44 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 36


State 22

   46 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 41
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44


State 23

   17 do_while_statement: _DO . statement _WHILE _LPAREN _ID $@3 _RELOP literal $@4 _RPAREN _SEMICOLON

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _DO        shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25

    do_while_statement    go to state 27
    statement             go to state 45
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 24

   26 assignment_statement: _ID . dodela _SEMICOLON

    _ASSIGN  shift, and go to state 46

    dodela  go to state 47


State 25

   25 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 18 (statement_list)

    statement_list  go to state 48


State 26

    8 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 8 (body)


State 27

   23 statement: do_while_statement .

    $default  reduce using rule 23 (statement)


State 28

   19 statement_list: statement_list statement .

    $default  reduce using rule 19 (statement_list)


State 29

   20 statement: compound_statement .

    $default  reduce using rule 20 (statement)


State 30

   21 statement: assignment_statement .

    $default  reduce using rule 21 (statement)


State 31

   22 statement: if_statement .

    $default  reduce using rule 22 (statement)


State 32

   42 if_statement: if_part .
   43             | if_part . _ELSE statement

    _ELSE  shift, and go to state 49

    $default  reduce using rule 42 (if_statement)


State 33

   24 statement: return_statement .

    $default  reduce using rule 24 (statement)


State 34

   13 promenljiva: _ID .

    $default  reduce using rule 13 (promenljiva)


State 35

   12 variable: _TYPE $@2 promenljiva . _SEMICOLON
   14 promenljiva: promenljiva . _COMMA _ID

    _COMMA      shift, and go to state 50
    _SEMICOLON  shift, and go to state 51


State 36

   44 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 52
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44
    rel_exp        go to state 53


State 37

   32 exp: _ID .
   33    | _ID . _INCREMENT
   39 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _INCREMENT  shift, and go to state 54

    _LPAREN   reduce using rule 38 ($@5)
    $default  reduce using rule 32 (exp)

    $@5  go to state 55


State 38

   36 literal: _INT_NUMBER .

    $default  reduce using rule 36 (literal)


State 39

   37 literal: _UINT_NUMBER .

    $default  reduce using rule 37 (literal)


State 40

   35 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 56
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44


State 41

   30 num_exp: num_exp . _AROP exp
   46 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 57
    _AROP       shift, and go to state 58


State 42

   29 num_exp: exp .

    $default  reduce using rule 29 (num_exp)


State 43

   31 exp: literal .

    $default  reduce using rule 31 (exp)


State 44

   34 exp: function_call .

    $default  reduce using rule 34 (exp)


State 45

   17 do_while_statement: _DO statement . _WHILE _LPAREN _ID $@3 _RELOP literal $@4 _RPAREN _SEMICOLON

    _WHILE  shift, and go to state 59


State 46

   27 dodela: _ASSIGN . num_exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 60
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44


State 47

   26 assignment_statement: _ID dodela . _SEMICOLON
   28 dodela: dodela . _ASSIGN num_exp

    _ASSIGN     shift, and go to state 61
    _SEMICOLON  shift, and go to state 62


State 48

   19 statement_list: statement_list . statement
   25 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _DO        shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25
    _RBRACKET  shift, and go to state 63

    do_while_statement    go to state 27
    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 49

   43 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _DO        shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25

    do_while_statement    go to state 27
    statement             go to state 64
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 50

   14 promenljiva: promenljiva _COMMA . _ID

    _ID  shift, and go to state 65


State 51

   12 variable: _TYPE $@2 promenljiva _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 52

   30 num_exp: num_exp . _AROP exp
   45 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 58
    _RELOP  shift, and go to state 66


State 53

   44 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 67


State 54

   33 exp: _ID _INCREMENT .

    $default  reduce using rule 33 (exp)


State 55

   39 function_call: _ID $@5 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 68


State 56

   30 num_exp: num_exp . _AROP exp
   35 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 69
    _AROP    shift, and go to state 58


State 57

   46 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 46 (return_statement)


State 58

   30 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    exp            go to state 70
    literal        go to state 43
    function_call  go to state 44


State 59

   17 do_while_statement: _DO statement _WHILE . _LPAREN _ID $@3 _RELOP literal $@4 _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 71


State 60

   27 dodela: _ASSIGN num_exp .
   30 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 58

    $default  reduce using rule 27 (dodela)


State 61

   28 dodela: dodela _ASSIGN . num_exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 72
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44


State 62

   26 assignment_statement: _ID dodela _SEMICOLON .

    $default  reduce using rule 26 (assignment_statement)


State 63

   25 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 25 (compound_statement)


State 64

   43 if_statement: if_part _ELSE statement .

    $default  reduce using rule 43 (if_statement)


State 65

   14 promenljiva: promenljiva _COMMA _ID .

    $default  reduce using rule 14 (promenljiva)


State 66

   45 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    num_exp        go to state 73
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44


State 67

   44 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _DO        shift, and go to state 23
    _ID        shift, and go to state 24
    _LBRACKET  shift, and go to state 25

    do_while_statement    go to state 27
    statement             go to state 74
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 68

   39 function_call: _ID $@5 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 37
    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39
    _LPAREN       shift, and go to state 40

    $default  reduce using rule 40 (argument)

    num_exp        go to state 75
    exp            go to state 42
    literal        go to state 43
    function_call  go to state 44
    argument       go to state 76


State 69

   35 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 35 (exp)


State 70

   30 num_exp: num_exp _AROP exp .

    $default  reduce using rule 30 (num_exp)


State 71

   17 do_while_statement: _DO statement _WHILE _LPAREN . _ID $@3 _RELOP literal $@4 _RPAREN _SEMICOLON

    _ID  shift, and go to state 77


State 72

   28 dodela: dodela _ASSIGN num_exp .
   30 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 58

    $default  reduce using rule 28 (dodela)


State 73

   30 num_exp: num_exp . _AROP exp
   45 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 58

    $default  reduce using rule 45 (rel_exp)


State 74

   44 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 44 (if_part)


State 75

   30 num_exp: num_exp . _AROP exp
   41 argument: num_exp .

    _AROP  shift, and go to state 58

    $default  reduce using rule 41 (argument)


State 76

   39 function_call: _ID $@5 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 78


State 77

   17 do_while_statement: _DO statement _WHILE _LPAREN _ID . $@3 _RELOP literal $@4 _RPAREN _SEMICOLON

    $default  reduce using rule 15 ($@3)

    $@3  go to state 79


State 78

   39 function_call: _ID $@5 _LPAREN argument _RPAREN .

    $default  reduce using rule 39 (function_call)


State 79

   17 do_while_statement: _DO statement _WHILE _LPAREN _ID $@3 . _RELOP literal $@4 _RPAREN _SEMICOLON

    _RELOP  shift, and go to state 80


State 80

   17 do_while_statement: _DO statement _WHILE _LPAREN _ID $@3 _RELOP . literal $@4 _RPAREN _SEMICOLON

    _INT_NUMBER   shift, and go to state 38
    _UINT_NUMBER  shift, and go to state 39

    literal  go to state 81


State 81

   17 do_while_statement: _DO statement _WHILE _LPAREN _ID $@3 _RELOP literal . $@4 _RPAREN _SEMICOLON

    $default  reduce using rule 16 ($@4)

    $@4  go to state 82


State 82

   17 do_while_statement: _DO statement _WHILE _LPAREN _ID $@3 _RELOP literal $@4 . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 83


State 83

   17 do_while_statement: _DO statement _WHILE _LPAREN _ID $@3 _RELOP literal $@4 _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 84


State 84

   17 do_while_statement: _DO statement _WHILE _LPAREN _ID $@3 _RELOP literal $@4 _RPAREN _SEMICOLON .

    $default  reduce using rule 17 (do_while_statement)
